name: Create Release Candidate

description: Create Release Candidate

inputs:
  tag:
    required: true
    description: tag

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: check rc and merge
      run: |
        #!/usr/bin/env bash

        git config user.name "GitHub Actions Bot"
        git config user.email "devops@atarb2b.com"
        git fetch --all

        fc_branch=$(git symbolic-ref --short HEAD)

        get_hash() {
          git rev-parse --short "$1" || true
        }

        fc_branch_hash=$(get_hash "origin/$fc_branch")
        rc_branch_hash=$(get_hash "origin/rc/${{ inputs.tag }}")

        if [ "$fc_branch_hash" = "$rc_branch_hash" ]; then
          echo "can't merge. fc branch is equal to the rc branch."
          exit 1
        fi

        if [ -z "$rc_branch_hash" ]; then
        
          echo "rc branch not found."
          
          git checkout -b "origin/rc/${{ inputs.tag }}"
          git push --set-upstream origin "rc/${{ inputs.tag }}"
        
        else
          
          echo "rc/${{ inputs.tag }} alredy exists, go to merge."
          
          echo $fc_branch

          git pull origin $fc_branch --allow-unrelated-histories
          git checkout --quiet "origin/$fc_branch"
          git merge --ff --no-edit "origin/rc/${{ inputs.tag }}" -m "Merge Commit Auto." || true
          git push --set-upstream origin "rc/${{ inputs.tag }}"

          echo "merge into rc/${{ inputs.tag }} success."

        fi
      shell: bash

    - name: Send Message to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{job.status}}
        username: "CREATE_RC|${{github.event.repository.name}}|rc/${{ inputs.tag }}"
        author_name: ${{github.workflow}}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
      if: always()
