name: Create Release Candidate

description: Create Release Candidate

inputs:
  tag:
    required: true
    description: tag

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: check rc and merge
      run: |
        #!/usr/bin/env bash

        echo "start ........................."
        echo "start ........................."
        echo "start ........................."

        git config user.name "GitHub Actions Bot"
        git config user.email "devops@atarb2b.com"
        git fetch --all

        get_hash() {
          git rev-parse --short origin/"$1" || true
        }
        
        # current_release_candidate=(`git branch -a | grep -v remotes | grep rc | head -n 1`)
        # current_release_candidate_hash=$(get_hash $current_release_candidate)
        # current_branch=$(git symbolic-ref --short HEAD)
        
        current_branch=test
        current_release_candidate="rc/1679005369"
        current_release_candidate_hash="687fc34"

        if [ -z "$current_release_candidate_hash" ]; then
        
          echo "release candidate branch not found, lets create."
          new_version=$(date +%s)
          git checkout -b origin/rc/$new_version
          git push --set-upstream origin rc/$new_version
        
        else
          
          echo "release candidate alredy exists, lets go to merge."
          git checkout --quiet origin/$current_release_candidate
          git merge --allow-unrelated-histories --no-edit origin/$current_branch -m "merge commit auto." || true
          git push --set-upstream origin $current_release_candidate

          echo "merge into rc/$current_release_candidate success."

        fi
      shell: bash

    - name: Send Message to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{job.status}}
        username: "CREATE_RC|${{github.event.repository.name}}|rc/${{ inputs.tag }}"
        author_name: ${{github.workflow}}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
      if: always()
