name: Create Release Candidate

description: Create Release Candidate

inputs:
  ORIGIN:
    required: true
    description: Origem
  SERVICE:
    required: true
    description: Service
  SERVICE_ACCOUNT_CREDENTIALS:
    required: true
    description: Service account credentials

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Change Owner of Container Working Directory
      run: chown -R $(id -u):$(id -g) $PWD
      shell: bash

    - name: Check Current Branch
      id: current
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "devops@atarb2b.com"
        echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
      shell: bash

    - if: ${{ inputs.ORIGIN }} == 'fc'
      name: Check version
      run: |
        URL="https://wearatar-dev.appspot.com/api-version/${{ inputs.SERVICE }}"
        DATA="{\"incrementType\":\"minor\"}"
        VERSION=$(curl $URL \
        --request PUT \
        --data $DATA \
        --header "user-agent: appengine-google" \
        --header "Content-Type: application/json" \
        --header "Authorization: Basic ${{ inputs.SERVICE_ACCOUNT_CREDENTIALS}}" | jq -r '.version')

        echo "TAG=v${VERSION}" >> $GITHUB_ENV
        
      shell: bash

    - if: ${{ inputs.ORIGIN }} == 'fix'
      name: Check version
      run: |
        URL="https://wearatar-dev.appspot.com/api-version/${{ inputs.SERVICE }}"
        DATA="{\"incrementType\":\"patch\"}"
        VERSION=$(curl $URL \
        --request PUT \
        --data $DATA \
        --header "user-agent: appengine-google" \
        --header "Content-Type: application/json" \
        --header "Authorization: Basic ${{ inputs.SERVICE_ACCOUNT_CREDENTIALS}}" | jq -r '.version')
        
        echo "TAG=v${VERSION}" >> $GITHUB_ENV

      shell: bash

    - id: check-branch-exists
      uses: GuillaumeFalourd/branch-exists@v1
      with:
        branch: ${{env.TAG}}

    - if: steps.check-branch-exists.outputs.exists == 'true'
      run: |        
        
        baseBranch=${{ steps.current.outputs.CURRENT_BRANCH }}
        secondaryBranch=rc/${{env.TAG}}

        commitDiffCount=''
        baseBranchPath=$(git branch -r | grep "$baseBranch" | xargs)
        secondaryBranchPath=$(git branch -r | grep "$secondaryBranch" | xargs)
        commitDiffCount=$(git log --oneline "$secondaryBranchPath" \^"$baseBranchPath" | wc -l)
        
        if [[ "$commitDiffCount" -eq 0 ]]; then
        
          echo "------------  NOTHING TO MERGE  ------------"
        
        else
          
          echo "------------  Open PR from ${{ steps.current.outputs.CURRENT_BRANCH }} to ${{env.TAG}}.  ------------"
          gh pr create --base=rc/${{env.TAG}} --head=${{ steps.current.outputs.CURRENT_BRANCH }} --title="[FC] branch ${{ steps.current.outputs.CURRENT_BRANCH }} to RC/${{env.TAG}} " --body="Pull Request FC to RC"
        
        fi
      
      shell: bash

    - if: steps.check-branch-exists.outputs.exists == 'false'
      run: |
        echo "New Release Candidate is rc/${{env.TAG}}"
        git checkout main || echo
        git checkout -b rc/${{env.TAG}} || echo
        git push --set-upstream origin rc/${{env.TAG}} || echo
        
        gh pr create --base=rc/${{env.TAG}} --head=${{ steps.current.outputs.CURRENT_BRANCH }} --title="[FC] branch ${{ steps.current.outputs.CURRENT_BRANCH }} to RC/${{env.TAG}} " --body="Pull Request FC to RC"

      shell: bash
