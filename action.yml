name: Create Release Candidate

description: Create Release Candidate

inputs:
  ORIGIN:
    required: true
    description: Origem
  GITHUB_TOKEN:
    required: true
    description: GITHUB_TOKEN

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3
    
    - run: git fetch --prune --unshallow
      shell: bash

    - name: Change Owner of Container Working Directory
      run: chown -R $(id -u):$(id -g) $PWD
      shell: bash

    - name: Check Current Branch
      id: current
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "devops@atarb2b.com"
        echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
        echo "TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT
      shell: bash

    - name: Install semver
      run: |
        wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
        chmod +x /usr/local/bin/semver
        semver --version
      shell: bash

    - if: ${{ inputs.ORIGIN }} == 'fc'
      name: Bump Minor
      id: bump
      run: semver bump minor ${{ steps.current.outputs.TAG }}
      shell: bash

    - if: ${{ inputs.ORIGIN }} == 'hotfix'
      name: Bump Patch
      id: bump
      run: semver bump patch ${{ steps.current.outputs.TAG }}
      shell: bash
    
    - id: check-branch-exists
      uses: GuillaumeFalourd/branch-exists@v1
      with:
        branch: v${{ steps.current.outputs.TAG }}

    # - if: steps.check-branch-exists.outputs.exists == 'true'
    #   run: |        
        
    #     baseBranch=${{ steps.current.outputs.CURRENT_BRANCH }}
    #     secondaryBranch=rc/${{ steps.current.outputs.TAG }}

    #     commitDiffCount=''
    #     baseBranchPath=$(git branch -r | grep "$baseBranch" | xargs)
    #     secondaryBranchPath=$(git branch -r | grep "$secondaryBranch" | xargs)
    #     commitDiffCount=$(git log --oneline "$secondaryBranchPath" \^"$baseBranchPath" | wc -l)
        
    #     if [[ "$commitDiffCount" -eq 0 ]]; then
        
    #       echo "------------  NOTHING TO MERGE  ------------"
        
    #     else
          
    #       echo "------------  Open PR from ${{ steps.current.outputs.CURRENT_BRANCH }} to ${{ steps.current.outputs.TAG }}.  ------------"
    #       gh pr create --base=rc/${{ steps.current.outputs.TAG }} --head=${{ steps.current.outputs.CURRENT_BRANCH }} --title="[FC] branch ${{ steps.current.outputs.CURRENT_BRANCH }} to RC/${{ steps.current.outputs.TAG }} " --body="Pull Request FC to RC"
        
    #     fi
      
    #   shell: bash

    # - if: steps.check-branch-exists.outputs.exists == 'false'
    #   run: |
    #     echo "New Release Candidate is rc/${{ steps.current.outputs.TAG }}"
    #     git checkout main || echo
    #     git checkout -b rc/${{ steps.current.outputs.TAG }} || echo
    #     git push --set-upstream origin rc/${{ steps.current.outputs.TAG }} || echo
        
    #     gh pr create --base=rc/${{ steps.current.outputs.TAG }} --head=${{ steps.current.outputs.CURRENT_BRANCH }} --title="[FC] branch ${{ steps.current.outputs.CURRENT_BRANCH }} to RC/${{ steps.current.outputs.TAG }} " --body="Pull Request FC to RC"

    #   shell: bash
